//sum unwrapping

typedef Test = union Int!6 | Unit!10

func testSum_0(x: Test!4) -> Int!1 {
	if (case let left = inl x) {
		assertTypeEqual(x, Test!3)
		assertTypeEqual(left, Int!6)
		return left
	}
    assertTypeEqual(x, Test!3)

    switch (x) {
        case let y: Int!12 = inl: {
            assertTypeEqual(y, Int!12)
            assertTypeEqual(x, Test!1)
            return y
        }
        case let y = inr: {
            assertTypeEqual(y, Unit!10)
            assertTypeEqual(x, Test!2)
            if (case let left: Int!12 = inl x) {
                assertTypeEqual(left, Int!12)
                assertTypeEqual(x, Test!0)
            }
            return 2
        }
    }

    assertTypeEqual(x, Test!0)
    return 10
}
